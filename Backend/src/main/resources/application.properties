spring.jpa.database = POSTGRESQL
spring.datasource.platform = postgres
spring.jpa.show-sql = true
spring.datasource.driver-class-name = org.postgresql.Driver

# parametri za konekciju

# na vasim racunarima ce ici localhost umesto 192...
spring.datasource.url = jdbc:postgresql://localhost:5432/Book
spring.datasource.username = postgres
spring.datasource.password = chang3.ME

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect

spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto= update

# App Properties
bezkoder.app.jwtSecret= bezKoderSecretKey
bezkoder.app.jwtExpirationMs= 86400000

# port pomocu kojeg pristupamo app
server.port = 8083

# disable driver's feature detection
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# without detection you have to set the dialect by hand
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

spring.jackson.serialization.fail-on-empty-beans = false


# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Treshold after which files are written to disk
spring.servlet.multipart.file-size-threshold=2KB
# Max file size
spring.servlet.multipart.max-file-size=200KB
# Max request size
spring.servlet.multipart.max-request-size=200KB

# File storage properties
# All files uploaded throught the REST API will be stored in this directory
file.upload-dir=C:\\Users\\Marijana\\Desktop\\storage\\

